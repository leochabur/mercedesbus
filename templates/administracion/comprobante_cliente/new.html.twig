{% extends 'navBar.html.twig' %}

{% block title %}Factura Venta{% endblock %}

{% block body %}
    
    {{ parent() }}
    <div class="container">
    
    {{ include('message.html.twig') }}

    {{ include('administracion/comprobante_cliente/_form.html.twig') }}
    </div>



{% endblock %}
{# El bloque javascripts debería estar en _form.html.twig si este es el que siempre contiene la lógica de los ítems #}
{% block javascripts_footer %} {# Usamos un nombre de bloque más específico #}
{{ parent()  }}
<script>

$(document).ready(function() {


    const  $url = "{{ path('app_administracion_articulo_concepto_cliente_importe', { ente : 'ID_ENTE', art : 'ID_ART'  }) }}";
    const $collectionHolder = $('#items-collection');
    let index = $collectionHolder.find('.item-form').length; // Asumiendo que cada item tiene una clase 'item-form'
        function totalizarImportes()
        {
            let total = 0;
            let totalfinal = 0;
            $('.precio-ii').each(function() 
            {
                const $this = $(this);
                const $li = $(this).closest('li');
                const $importFinal = $li.find('.precio-ii-final');
                const value = parseFloat($this.val());
                const valuef = parseFloat($importFinal.val());
                const cant = parseFloat($li.find('.input-cant').val());

                if (!isNaN(valuef)) 
                {
                    totalfinal += ( valuef * ( isNaN(cant) ? 0 : cant ) );
                }

                if (!isNaN(value)) {
                    total += (value * ( isNaN(cant) ? 0 : cant ) ); // Aseguramos que cant no sea NaN
                }
            });
            $('#totalsiv').val(total.toFixed(2));

            $('#totalfin').val(totalfinal.toFixed(2));
        }

                $('.input-cant').on('input', function() {

                                const $this = $(this);

                                const $li = $(this).closest('li');
                                const $import = $li.find('.precio-ii');

                                const $selectedOption = $li.find('select[id$="_articulo"]').find('option:selected');
                                const $ivaValue = $selectedOption.data('iva');
                                const $importFinal = $li.find('.precio-ii-final');

                                if ($ivaValue) 
                                {
                                        const precioConIva = parseFloat($import.val()) * (1 + parseFloat($ivaValue) / 100);
                                        if ($import.val() === '' || isNaN(precioConIva)) 
                                        {
                                            $importFinal.val('');
                                        }
                                        else
                                        {
                                            $importFinal.val(precioConIva.toFixed(2));
                                        }
                                } 
                                else 
                                {
                                    $importFinal.val($import.val());
                                }
                                totalizarImportes();
            });
    $('#add-item-button').on('click', function() {
        let prototype = $collectionHolder.data('prototype');
        let newForm = prototype.replace(/__name__/g, index);
        index++;

        let $newFormDiv = $('<div></div>').html(newForm);
        $collectionHolder.append($newFormDiv);

        // *** ESTO ES LO CLAVE: Identificar el nuevo select y poblarlo con AJAX ***
        const $articuloSelect = $newFormDiv.find('select[id$="_articulo"]'); // Busca el select cuyo ID termina en _articulo



        if ($articuloSelect.length) 
        {

                $('.input-cant').on('input', function() {

                                const $this = $(this);

                                const $li = $(this).closest('li');
                                const $import = $li.find('.precio-ii');

                                const $selectedOption = $li.find('select[id$="_articulo"]').find('option:selected');
                                const $ivaValue = $selectedOption.data('iva');
                                const $importFinal = $li.find('.precio-ii-final');

                                if ($ivaValue) 
                                {
                                        const precioConIva = parseFloat($import.val()) * (1 + parseFloat($ivaValue) / 100);
                                        if ($import.val() === '' || isNaN(precioConIva)) 
                                        {
                                            $importFinal.val('');
                                        }
                                        else
                                        {
                                            $importFinal.val(precioConIva.toFixed(2));
                                        }
                                } 
                                else 
                                {
                                    $importFinal.val($import.val());
                                }
                                totalizarImportes();
            });
            $articuloSelect.change(function() {                                                   

                                                    const $this = $(this);

                                                    const $selectedOption = $this.find('option:selected');
                                                    const $ivaValue = $selectedOption.data('iva'); 

                                                    const $li = $(this).closest('li');
                                                    const $import = $li.find('.precio-ii');
                                                    const $vigencia = $li.find('.text-vigencia');
                                                    const $importFinal = $li.find('.precio-ii-final');
                                                    $import.val('');
                                                    $vigencia.text('.');
                                                    $.post($url.replace('ID_ENTE', $('.input-ente').val()).replace('ID_ART', $this.val()),
                                                            function(data) 
                                                            {
                                                                if ($ivaValue) 
                                                                {
                                                                    const precioConIva = parseFloat(data.monto) * (1 + parseFloat($ivaValue) / 100);
                                                                    $importFinal.val(precioConIva.toFixed(2));
                                                                } 
                                                                else 
                                                                {
                                                                    $importFinal.val(data.monto);
                                                                }
                                                                $import.val(data.monto);
                                                                $vigencia.text(data.vigencia);
                                                                totalizarImportes();
                                                            });
                                                 
                                             
        
            });
            
            $.ajax({
                url: "{{ path('api_articulos', { code : code}) }}", // La ruta a tu endpoint AJAX
                type: 'GET',
                dataType: 'json',
                success: function(articulos) {
                    // Limpiar opciones existentes (solo placeholder si lo hay)
                    $articuloSelect.empty();
                    $articuloSelect.append($('<option value="">Selecciona un artículo</option>')); // Añadir placeholder de nuevo

                    // Añadir las nuevas opciones
                    $.each(articulos, function(key, articulo) {
                        $articuloSelect.append($('<option>', {
                            value: articulo.id,
                            text: articulo.nombre,
                            'data-iva': articulo.iva
                        }));
                    });
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error("Error al cargar artículos: " + textStatus, errorThrown);
                }
            });

            $('.precio-ii').on('input', function() {

                                const $this = $(this);

                                const $li = $(this).closest('li');
                                const $import = $li.find('.precio-ii');

                                const $selectedOption = $li.find('select[id$="_articulo"]').find('option:selected');
                                const $ivaValue = $selectedOption.data('iva');
                                const $importFinal = $li.find('.precio-ii-final');

                                if ($ivaValue) 
                                {
                                        const precioConIva = parseFloat($import.val()) * (1 + parseFloat($ivaValue) / 100);
                                        if ($import.val() === '' || isNaN(precioConIva)) 
                                        {
                                            $importFinal.val('');
                                        }
                                        else
                                        {
                                            $importFinal.val(precioConIva.toFixed(2));
                                        }
                                } 
                                else 
                                {
                                    $importFinal.val($import.val());
                                }
                                totalizarImportes();
            });
        }
        addDeleteButtonListener($newFormDiv);
    });

    

    function addDeleteButtonListener($itemForm) {
        $itemForm.find('.remove-item-button').on('click', function() {
            // Eliminar el div padre del botón (que es el div del ítem del formulario)
            $(this).closest('.item-form').remove();
            totalizarImportes();
            // Opcional: Si necesitas manejar la eliminación en el backend (ver siguiente sección)
            // Aquí podrías marcar un campo oculto o hacer una llamada AJAX
        });
    }

    $('.remove-item-button-exists').on('click', function() {

            $(this).closest('.item-form').remove();
            totalizarImportes();
        });

    // Inicializar listeners para los ítems que ya existen al cargar la página
    $collectionHolder.find('.item-form').each(function() {
        addDeleteButtonListener($(this));
    });

                $('.precio-ii').on('input', function() {

                                const $this = $(this);

                                const $li = $(this).closest('li');
                                const $import = $li.find('.precio-ii');

                                const $selectedOption = $li.find('select[id$="_articulo"]').find('option:selected');
                                const $ivaValue = $selectedOption.data('iva');
                                const $importFinal = $li.find('.precio-ii-final');

                                if ($ivaValue) 
                                {
                                        const precioConIva = parseFloat($import.val()) * (1 + parseFloat($ivaValue) / 100);
                                        if ($import.val() === '' || isNaN(precioConIva)) 
                                        {
                                            $importFinal.val('');
                                        }
                                        else
                                        {
                                            $importFinal.val(precioConIva.toFixed(2));
                                        }
                                } 
                                else 
                                {
                                    $importFinal.val($import.val());
                                }
                                totalizarImportes();
            });

            $('.form-select-producto').change(function() {                                                   

                                                    const $this = $(this);

                                                    const $selectedOption = $this.find('option:selected');
                                                    const $ivaValue = $selectedOption.data('iva'); 

                                                    const $li = $(this).closest('li');
                                                    const $import = $li.find('.precio-ii');
                                                    const $vigencia = $li.find('.text-vigencia');
                                                    const $importFinal = $li.find('.precio-ii-final');
                                                    $import.val('');
                                                    $vigencia.text('.');
                                                    $.post($url.replace('ID_ENTE', $('.input-ente').val()).replace('ID_ART', $this.val()),
                                                            function(data) 
                                                            {
                                                                if ($ivaValue) 
                                                                {
                                                                    const precioConIva = parseFloat(data.monto) * (1 + parseFloat($ivaValue) / 100);
                                                                    $importFinal.val(precioConIva.toFixed(2));
                                                                } 
                                                                else 
                                                                {
                                                                    $importFinal.val(data.monto);
                                                                }
                                                                $import.val(data.monto);
                                                                $vigencia.text(data.vigencia);
                                                                totalizarImportes();
                                                            });
                                                 
                                             
        
            });

});







    /*document.addEventListener('DOMContentLoaded', function() 
    {
        const collectionHolder = document.querySelector('#items-collection');
        const addItemButton = document.querySelector('#add-item-button');

        if (!collectionHolder || !addItemButton) {
            // Si los elementos no existen (por ejemplo, no estamos en la página del formulario), salimos
            return;
        }

        // Función para añadir un nuevo formulario de ítem
        function addFormToCollection() 
        { // No necesitamos pasar collectionHolder como argumento aquí
            const prototype = collectionHolder.dataset.prototype;
            let index = parseInt(collectionHolder.dataset.index || collectionHolder.children.length); // Aseguramos el índice
            
            const newForm = prototype.replace(/__name__/g, index);
            collectionHolder.dataset.index = index + 1; // Actualizamos el índice para el próximo ítem

            const li = document.createElement('li');
            li.classList.add('item-entry'); // Añadimos la misma clase
            li.innerHTML = newForm;

            addRemoveButton(li); // Añadimos el botón de eliminar al nuevo ítem

            collectionHolder.appendChild(li);
        }

        // Función para añadir el botón de eliminar a un ítem
        function addRemoveButton(itemLi) {
            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.classList.add('remove-item-button', 'btn', 'btn-danger', 'btn-sm', 'mt-1', 'mb-2');
            removeButton.textContent = 'Eliminar ítem';
            itemLi.appendChild(removeButton);

            removeButton.addEventListener('click', function() {
                itemLi.remove();
            });
        }

        // Añadir evento al botón "Añadir ítem"
        // Aseguramos que el evento solo se adjunte una vez
        // Podemos usar una bandera o verificar si ya tiene un evento adjunto (más complejo)
        // La forma más simple es que este script se ejecute una sola vez.
        addItemButton.removeEventListener('click', addFormToCollection); // Quitar si ya existe
        addItemButton.addEventListener('click', addFormToCollection); // Añadirlo una vez

        // Añadir botones de eliminar a los ítems existentes (si los hay)
        collectionHolder.querySelectorAll('.item-entry').forEach(addRemoveButton);
    });*/
</script>
{% endblock %}
